//------------------------------------------------------------------------------
/// @file  sc_kernel_policy.h
/// @ingroup  include
/// 
/// @brief  Defines of data type for kernel policies
/// @author  Rakie Kim<rakie.kim@samsung.com>
/// 
/// @section changelog Change Log
/// 2016/04/12 Rakie Kim created
/// 
/// @section copyright_section Copyright
/// &copy; 2016, Samsung Electronics Co., Ltd.
/// 
/// @section license_section License
/// 
//------------------------------------------------------------------------------

#ifndef __SSDF_DSP_COMMON_INCLUDE_SC_KERNEL_POLICY_H__
#define __SSDF_DSP_COMMON_INCLUDE_SC_KERNEL_POLICY_H__

/// @enum  Enumeration of kernel policies
enum sc_enum_e {
  ///@{
  /// SC_POLICY_INTERPOLATION
  SC_POLICY_INTERPOLATION_NEAREST_NEIGHBOR,
  SC_POLICY_INTERPOLATION_BILINEAR,
  SC_POLICY_INTERPOLATION_AREA,
  SC_POLICY_INTERPOLATION_BICUBIC,
  SC_POLICY_INTERPOLATION_CUBICSPLINE,
  ///@}

  ///@{
  /// SC_POLICY_OVERFLOW
  SC_POLICY_OVERFLOW_TRUNCATE,
  SC_POLICY_OVERFLOW_SATURATE,
  ///@}

  ///@{
  /// SC_POLICY_CHANNEL
  SC_POLICY_CHANNEL_0,
  SC_POLICY_CHANNEL_1,
  SC_POLICY_CHANNEL_2,
  SC_POLICY_CHANNEL_3,
  SC_POLICY_CHANNEL_R,
  SC_POLICY_CHANNEL_G,
  SC_POLICY_CHANNEL_B,
  SC_POLICY_CHANNEL_A,
  SC_POLICY_CHANNEL_Y,
  SC_POLICY_CHANNEL_U,
  SC_POLICY_CHANNEL_V,
  SC_POLICY_CHANNEL_1CH,
  SC_POLICY_CHANNEL_2CH,
  SC_POLICY_CHANNEL_3CH,
  SC_POLICY_CHANNEL_4CH,
  ///@}

  ///@{
  /// SC_POLICY_THRESHOLD
  SC_POLICY_THRESHOLD_BINARY,
  SC_POLICY_THRESHOLD_RANGE,
  SC_POLICY_THRESHOLD_CLIP,
  ///@}

  ///@{
  /// SC_POLICY_COMPARISON
  SC_POLICY_COMPARISON_EQ,
  SC_POLICY_COMPARISON_NE,
  SC_POLICY_COMPARISON_GT,
  SC_POLICY_COMPARISON_LT,
  SC_POLICY_COMPARISON_GE,
  SC_POLICY_COMPARISON_LE,
  ///@}

  ///@{
  /// SC_POLICY_TERM_CRITERIA
  SC_POLICY_TERM_CRITERIA_ITERATIONS,
  SC_POLICY_TERM_CRITERIA_EPSILON,
  SC_POLICY_TERM_CRITERIA_BOTH,
  ///@}

  ///@{
  /// SC_POLICY_NORM
  SC_POLICY_NORM_L1,
  SC_POLICY_NORM_L2,
  ///@}

  ///@{
  /// SC_POLICY_ROUND
  SC_POLICY_ROUND_TO_ZERO,
  SC_POLICY_ROUND_TO_NEAREST_EVEN,
  ///@}

  ///@{
  /// SC_POLICY_NMS
  SC_POLICY_NMS_USE,
  SC_POLICY_NMS_NO_USE,
  ///@}

  ///@{
  /// SC_POLICY_DIRECTION
  SC_POLICY_DIRECTION_USE,
  SC_POLICY_DIRECTION_NO_USE,
  SC_POLICY_DIRECTION_X,
  SC_POLICY_DIRECTION_Y,
  SC_POLICY_DIRECTION_XY,
  SC_POLICY_DIRECTION_ROW,
  SC_POLICY_DIRECTION_COL,
  SC_POLICY_DIRECTION_90_DEGREE,
  SC_POLICY_DIRECTION_180_DEGREE,
  SC_POLICY_DIRECTION_270_DEGREE,
  SC_POLICY_DIRECTION_UPSIZE,
  SC_POLICY_DIRECTION_DOWNSIZE,
  SC_POLICY_DIRECTION_4,
  SC_POLICY_DIRECTION_8,
  SC_POLICY_DIRECTION_VERTICAL,
  SC_POLICY_DIRECTION_HORIZONTAL,
  ///@}

  ///@{
  /// SC_POLICY_CORNERS
  SC_POLICY_CORNERS_9,
  SC_POLICY_CORNERS_10,
  SC_POLICY_CORNERS_11,
  SC_POLICY_CORNERS_12,
  ///@}

  ///@{
  /// SC_POLICY_INIT
  SC_POLICY_INIT_USE,
  SC_POLICY_INIT_NO_USE
  ///@}
};

/// @enum Data transfer mode set to the DMA
typedef enum _neighbor_policy_e {
  EDGE_EXTEND,
  EDGE_MONOTONE
} neighbor_policy_e;

#endif
